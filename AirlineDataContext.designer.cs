#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AirLine
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Airline")]
	public partial class AirlineDataContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertAircraft(Aircraft instance);
    partial void UpdateAircraft(Aircraft instance);
    partial void DeleteAircraft(Aircraft instance);
    partial void Insertroutes(routes instance);
    partial void Updateroutes(routes instance);
    partial void Deleteroutes(routes instance);
    partial void Insertairports(airports instance);
    partial void Updateairports(airports instance);
    partial void Deleteairports(airports instance);
    partial void Insertflights(flights instance);
    partial void Updateflights(flights instance);
    partial void Deleteflights(flights instance);
    #endregion
		
		public AirlineDataContextDataContext() : 
				base(global::AirLine.Properties.Settings.Default.AirlineConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AirlineDataContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AirlineDataContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AirlineDataContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AirlineDataContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<User> User
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Aircraft> Aircraft
		{
			get
			{
				return this.GetTable<Aircraft>();
			}
		}
		
		public System.Data.Linq.Table<routes> routes
		{
			get
			{
				return this.GetTable<routes>();
			}
		}
		
		public System.Data.Linq.Table<airports> airports
		{
			get
			{
				return this.GetTable<airports>();
			}
		}
		
		public System.Data.Linq.Table<flights> flights
		{
			get
			{
				return this.GetTable<flights>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users")]
	public partial class User
	{
		
		private int _id;
		
		private string _user_name;
		
		private string _password;
		
		public User()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this._user_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this._password = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aircrafts")]
	public partial class Aircraft : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _code;
		
		private string _model;
		
		private int _seat_number;
		
		private EntitySet<flights> _flights;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnmodelChanging(string value);
    partial void OnmodelChanged();
    partial void Onseat_numberChanging(int value);
    partial void Onseat_numberChanged();
    #endregion
		
		public Aircraft()
		{
			this._flights = new EntitySet<flights>(new Action<flights>(this.attach_flights), new Action<flights>(this.detach_flights));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_model", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string model
		{
			get
			{
				return this._model;
			}
			set
			{
				if ((this._model != value))
				{
					this.OnmodelChanging(value);
					this.SendPropertyChanging();
					this._model = value;
					this.SendPropertyChanged("model");
					this.OnmodelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seat_number", DbType="Int NOT NULL")]
		public int seat_number
		{
			get
			{
				return this._seat_number;
			}
			set
			{
				if ((this._seat_number != value))
				{
					this.Onseat_numberChanging(value);
					this.SendPropertyChanging();
					this._seat_number = value;
					this.SendPropertyChanged("seat_number");
					this.Onseat_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aircraft_flights", Storage="_flights", ThisKey="id", OtherKey="aircraft_id")]
		public EntitySet<flights> flights
		{
			get
			{
				return this._flights;
			}
			set
			{
				this._flights.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_flights(flights entity)
		{
			this.SendPropertyChanging();
			entity.Aircraft = this;
		}
		
		private void detach_flights(flights entity)
		{
			this.SendPropertyChanging();
			entity.Aircraft = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.routes")]
	public partial class routes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.TimeSpan _flight_duration;
		
		private int _departure_id;
		
		private int _destination_id;
		
		private EntitySet<flights> _flights;
		
		private EntityRef<airports> _airports;
		
		private EntityRef<airports> _airports1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onflight_durationChanging(System.TimeSpan value);
    partial void Onflight_durationChanged();
    partial void Ondeparture_idChanging(int value);
    partial void Ondeparture_idChanged();
    partial void Ondestination_idChanging(int value);
    partial void Ondestination_idChanged();
    #endregion
		
		public routes()
		{
			this._flights = new EntitySet<flights>(new Action<flights>(this.attach_flights), new Action<flights>(this.detach_flights));
			this._airports = default(EntityRef<airports>);
			this._airports1 = default(EntityRef<airports>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flight_duration", DbType="Time NOT NULL")]
		public System.TimeSpan flight_duration
		{
			get
			{
				return this._flight_duration;
			}
			set
			{
				if ((this._flight_duration != value))
				{
					this.Onflight_durationChanging(value);
					this.SendPropertyChanging();
					this._flight_duration = value;
					this.SendPropertyChanged("flight_duration");
					this.Onflight_durationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departure_id", DbType="Int NOT NULL")]
		public int departure_id
		{
			get
			{
				return this._departure_id;
			}
			set
			{
				if ((this._departure_id != value))
				{
					if (this._airports.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondeparture_idChanging(value);
					this.SendPropertyChanging();
					this._departure_id = value;
					this.SendPropertyChanged("departure_id");
					this.Ondeparture_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_destination_id", DbType="Int NOT NULL")]
		public int destination_id
		{
			get
			{
				return this._destination_id;
			}
			set
			{
				if ((this._destination_id != value))
				{
					if (this._airports1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondestination_idChanging(value);
					this.SendPropertyChanging();
					this._destination_id = value;
					this.SendPropertyChanged("destination_id");
					this.Ondestination_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="routes_flights", Storage="_flights", ThisKey="id", OtherKey="route_id")]
		public EntitySet<flights> flights
		{
			get
			{
				return this._flights;
			}
			set
			{
				this._flights.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="airports_routes", Storage="_airports", ThisKey="departure_id", OtherKey="id", IsForeignKey=true)]
		public airports airports
		{
			get
			{
				return this._airports.Entity;
			}
			set
			{
				airports previousValue = this._airports.Entity;
				if (((previousValue != value) 
							|| (this._airports.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._airports.Entity = null;
						previousValue.routes.Remove(this);
					}
					this._airports.Entity = value;
					if ((value != null))
					{
						value.routes.Add(this);
						this._departure_id = value.id;
					}
					else
					{
						this._departure_id = default(int);
					}
					this.SendPropertyChanged("airports");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="airports_routes1", Storage="_airports1", ThisKey="destination_id", OtherKey="id", IsForeignKey=true)]
		public airports airports1
		{
			get
			{
				return this._airports1.Entity;
			}
			set
			{
				airports previousValue = this._airports1.Entity;
				if (((previousValue != value) 
							|| (this._airports1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._airports1.Entity = null;
						previousValue.routes1.Remove(this);
					}
					this._airports1.Entity = value;
					if ((value != null))
					{
						value.routes1.Add(this);
						this._destination_id = value.id;
					}
					else
					{
						this._destination_id = default(int);
					}
					this.SendPropertyChanged("airports1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_flights(flights entity)
		{
			this.SendPropertyChanging();
			entity.routes = this;
		}
		
		private void detach_flights(flights entity)
		{
			this.SendPropertyChanging();
			entity.routes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.airports")]
	public partial class airports : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _alias;
		
		private EntitySet<routes> _routes;
		
		private EntitySet<routes> _routes1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnaliasChanging(string value);
    partial void OnaliasChanged();
    #endregion
		
		public airports()
		{
			this._routes = new EntitySet<routes>(new Action<routes>(this.attach_routes), new Action<routes>(this.detach_routes));
			this._routes1 = new EntitySet<routes>(new Action<routes>(this.attach_routes1), new Action<routes>(this.detach_routes1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(75) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alias", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string alias
		{
			get
			{
				return this._alias;
			}
			set
			{
				if ((this._alias != value))
				{
					this.OnaliasChanging(value);
					this.SendPropertyChanging();
					this._alias = value;
					this.SendPropertyChanged("alias");
					this.OnaliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="airports_routes", Storage="_routes", ThisKey="id", OtherKey="departure_id")]
		public EntitySet<routes> routes
		{
			get
			{
				return this._routes;
			}
			set
			{
				this._routes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="airports_routes1", Storage="_routes1", ThisKey="id", OtherKey="destination_id")]
		public EntitySet<routes> routes1
		{
			get
			{
				return this._routes1;
			}
			set
			{
				this._routes1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_routes(routes entity)
		{
			this.SendPropertyChanging();
			entity.airports = this;
		}
		
		private void detach_routes(routes entity)
		{
			this.SendPropertyChanging();
			entity.airports = null;
		}
		
		private void attach_routes1(routes entity)
		{
			this.SendPropertyChanging();
			entity.airports1 = this;
		}
		
		private void detach_routes1(routes entity)
		{
			this.SendPropertyChanging();
			entity.airports1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.flights")]
	public partial class flights : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.DateTime> _create_at;
		
		private System.DateTime _departure;
		
		private System.DateTime _arrival;
		
		private string _prices;
		
		private System.Nullable<decimal> _surcharge;
		
		private System.Nullable<int> _route_id;
		
		private System.Nullable<int> _aircraft_id;
		
		private System.Nullable<int> _regular_seats;
		
		private System.Nullable<int> _frist_class_seats;
		
		private System.Nullable<int> _total_regular_seats;
		
		private System.Nullable<int> _total_frist_class_seats;
		
		private EntityRef<Aircraft> _Aircraft;
		
		private EntityRef<routes> _routes;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oncreate_atChanging(System.Nullable<System.DateTime> value);
    partial void Oncreate_atChanged();
    partial void OndepartureChanging(System.DateTime value);
    partial void OndepartureChanged();
    partial void OnarrivalChanging(System.DateTime value);
    partial void OnarrivalChanged();
    partial void OnpricesChanging(string value);
    partial void OnpricesChanged();
    partial void OnsurchargeChanging(System.Nullable<decimal> value);
    partial void OnsurchargeChanged();
    partial void Onroute_idChanging(System.Nullable<int> value);
    partial void Onroute_idChanged();
    partial void Onaircraft_idChanging(System.Nullable<int> value);
    partial void Onaircraft_idChanged();
    partial void Onregular_seatsChanging(System.Nullable<int> value);
    partial void Onregular_seatsChanged();
    partial void Onfrist_class_seatsChanging(System.Nullable<int> value);
    partial void Onfrist_class_seatsChanged();
    partial void Ontotal_regular_seatsChanging(System.Nullable<int> value);
    partial void Ontotal_regular_seatsChanged();
    partial void Ontotal_frist_class_seatsChanging(System.Nullable<int> value);
    partial void Ontotal_frist_class_seatsChanged();
    #endregion
		
		public flights()
		{
			this._Aircraft = default(EntityRef<Aircraft>);
			this._routes = default(EntityRef<routes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> create_at
		{
			get
			{
				return this._create_at;
			}
			set
			{
				if ((this._create_at != value))
				{
					this.Oncreate_atChanging(value);
					this.SendPropertyChanging();
					this._create_at = value;
					this.SendPropertyChanged("create_at");
					this.Oncreate_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departure", DbType="DateTime NOT NULL")]
		public System.DateTime departure
		{
			get
			{
				return this._departure;
			}
			set
			{
				if ((this._departure != value))
				{
					this.OndepartureChanging(value);
					this.SendPropertyChanging();
					this._departure = value;
					this.SendPropertyChanged("departure");
					this.OndepartureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_arrival", DbType="DateTime NOT NULL")]
		public System.DateTime arrival
		{
			get
			{
				return this._arrival;
			}
			set
			{
				if ((this._arrival != value))
				{
					this.OnarrivalChanging(value);
					this.SendPropertyChanging();
					this._arrival = value;
					this.SendPropertyChanged("arrival");
					this.OnarrivalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prices", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string prices
		{
			get
			{
				return this._prices;
			}
			set
			{
				if ((this._prices != value))
				{
					this.OnpricesChanging(value);
					this.SendPropertyChanging();
					this._prices = value;
					this.SendPropertyChanged("prices");
					this.OnpricesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_surcharge", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> surcharge
		{
			get
			{
				return this._surcharge;
			}
			set
			{
				if ((this._surcharge != value))
				{
					this.OnsurchargeChanging(value);
					this.SendPropertyChanging();
					this._surcharge = value;
					this.SendPropertyChanged("surcharge");
					this.OnsurchargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_route_id", DbType="Int")]
		public System.Nullable<int> route_id
		{
			get
			{
				return this._route_id;
			}
			set
			{
				if ((this._route_id != value))
				{
					if (this._routes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onroute_idChanging(value);
					this.SendPropertyChanging();
					this._route_id = value;
					this.SendPropertyChanged("route_id");
					this.Onroute_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aircraft_id", DbType="Int")]
		public System.Nullable<int> aircraft_id
		{
			get
			{
				return this._aircraft_id;
			}
			set
			{
				if ((this._aircraft_id != value))
				{
					if (this._Aircraft.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaircraft_idChanging(value);
					this.SendPropertyChanging();
					this._aircraft_id = value;
					this.SendPropertyChanged("aircraft_id");
					this.Onaircraft_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regular_seats", DbType="Int")]
		public System.Nullable<int> regular_seats
		{
			get
			{
				return this._regular_seats;
			}
			set
			{
				if ((this._regular_seats != value))
				{
					this.Onregular_seatsChanging(value);
					this.SendPropertyChanging();
					this._regular_seats = value;
					this.SendPropertyChanged("regular_seats");
					this.Onregular_seatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_frist_class_seats", DbType="Int")]
		public System.Nullable<int> frist_class_seats
		{
			get
			{
				return this._frist_class_seats;
			}
			set
			{
				if ((this._frist_class_seats != value))
				{
					this.Onfrist_class_seatsChanging(value);
					this.SendPropertyChanging();
					this._frist_class_seats = value;
					this.SendPropertyChanged("frist_class_seats");
					this.Onfrist_class_seatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_regular_seats", DbType="Int")]
		public System.Nullable<int> total_regular_seats
		{
			get
			{
				return this._total_regular_seats;
			}
			set
			{
				if ((this._total_regular_seats != value))
				{
					this.Ontotal_regular_seatsChanging(value);
					this.SendPropertyChanging();
					this._total_regular_seats = value;
					this.SendPropertyChanged("total_regular_seats");
					this.Ontotal_regular_seatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_frist_class_seats", DbType="Int")]
		public System.Nullable<int> total_frist_class_seats
		{
			get
			{
				return this._total_frist_class_seats;
			}
			set
			{
				if ((this._total_frist_class_seats != value))
				{
					this.Ontotal_frist_class_seatsChanging(value);
					this.SendPropertyChanging();
					this._total_frist_class_seats = value;
					this.SendPropertyChanged("total_frist_class_seats");
					this.Ontotal_frist_class_seatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aircraft_flights", Storage="_Aircraft", ThisKey="aircraft_id", OtherKey="id", IsForeignKey=true)]
		public Aircraft Aircraft
		{
			get
			{
				return this._Aircraft.Entity;
			}
			set
			{
				Aircraft previousValue = this._Aircraft.Entity;
				if (((previousValue != value) 
							|| (this._Aircraft.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aircraft.Entity = null;
						previousValue.flights.Remove(this);
					}
					this._Aircraft.Entity = value;
					if ((value != null))
					{
						value.flights.Add(this);
						this._aircraft_id = value.id;
					}
					else
					{
						this._aircraft_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Aircraft");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="routes_flights", Storage="_routes", ThisKey="route_id", OtherKey="id", IsForeignKey=true)]
		public routes routes
		{
			get
			{
				return this._routes.Entity;
			}
			set
			{
				routes previousValue = this._routes.Entity;
				if (((previousValue != value) 
							|| (this._routes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._routes.Entity = null;
						previousValue.flights.Remove(this);
					}
					this._routes.Entity = value;
					if ((value != null))
					{
						value.flights.Add(this);
						this._route_id = value.id;
					}
					else
					{
						this._route_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("routes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
